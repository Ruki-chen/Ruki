<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gx.dao.SongDao" >
  <resultMap id="BaseResultMap" type="com.gx.po.SongPo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 16 19:18:30 CST 2016.
    -->
    <constructor >
      <arg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="songName" jdbcType="VARCHAR" javaType="java.lang.String" />
       <arg column="singerName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="lyric" jdbcType="VARCHAR" javaType="java.lang.String" />
       <arg column="songPath" jdbcType="VARCHAR" javaType="java.lang.String" />
       <arg column="albumName" jdbcType="VARCHAR" javaType="java.lang.String" />
       <arg column="country" jdbcType="VARCHAR" javaType="java.lang.String" />
       <arg column="schools" jdbcType="VARCHAR" javaType="java.lang.String" />
       <arg column="year" jdbcType="VARCHAR" javaType="java.lang.String" />
       <arg column="isPopular" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  
  <!--   分页模糊查询 -->
   <select id="pageFuzzyselect" resultType="com.gx.po.SongPo">
      Select * From Song WHERE songName like CONCAT('%',#{songName,jdbcType=VARCHAR},'%') 
     limit #{start},#{pageSize}
  </select>
  
   <select id="pageFuzzyselectUser" resultType="com.gx.po.SongPo">
      Select * From Song WHERE country like CONCAT('%',#{country,jdbcType=VARCHAR},'%')  And schools like CONCAT('%',#{schools,jdbcType=VARCHAR},'%') 
      And isPopular like CONCAT('%',#{isPopular,jdbcType=VARCHAR},'%')     And year like CONCAT('%',#{year,jdbcType=VARCHAR},'%')
     limit #{start},#{pageSize}
  </select>
  
   <select id="countFuzzyselect" resultType="java.lang.Integer">
       SELECT count(*) FROM  Song   WHERE songName like CONCAT('%',#{songName,jdbcType=VARCHAR},'%')
  </select>
  
  <select id="countFuzzyselectUser" resultType="java.lang.Integer">
       SELECT count(*) FROM  Song   WHERE country like CONCAT('%',#{country,jdbcType=VARCHAR},'%')  And schools like CONCAT('%',#{schools,jdbcType=VARCHAR},'%') 
      And isPopular like CONCAT('%',#{isPopular,jdbcType=VARCHAR},'%')     And year like CONCAT('%',#{year,jdbcType=VARCHAR},'%')
  </select>
  
  <select id="selectSongBySongPath" resultType="com.gx.po.SongPo" >
     Select * From Song Where songPath = #{songPath,jdbcType=VARCHAR} 
  </select>
  
  
   <select id="selectSongBySingerName" resultType="com.gx.po.SongPo" >
     Select * From Song Where singerName = #{singerName,jdbcType=VARCHAR} 
  </select>
  <select id="selectSongByAlbumName" resultType="com.gx.po.SongPo" >
     Select * From Song Where albumName = #{albumName,jdbcType=VARCHAR} 
  </select>
  
  <select id="selectSongByLyric" resultType="com.gx.po.SongPo" >
     Select * From Song Where lyric = #{lyric,jdbcType=VARCHAR} 
  </select>
  
 
  <insert id="addSong" parameterType="com.gx.po.SongPo" >
     INSERT INTO Song (songName,singerName,lyric,songPath,albumName,country,schools,year,isPopular)
     values (#{songName,jdbcType = VARCHAR},
             #{singerName,jdbcType = VARCHAR},
             #{lyric,jdbcType = VARCHAR},
             #{songPath,jdbcType=VARCHAR},
             #{albumName,jdbcType = VARCHAR},
             #{country,jdbcType = VARCHAR},
             #{schools,jdbcType = VARCHAR},
             #{year,jdbcType = VARCHAR},
             #{isPopular,jdbcType = VARCHAR})
  </insert>
  
  <select id="returnSongById" resultType="com.gx.po.SongPo" parameterType="java.lang.Integer">
    select * from Song where id=#{id,jdbcType=INTEGER}
   </select>
   
    <update id="updateById" parameterType="com.gx.po.SongPo">
      UPDATE Song SET songName=#{songName,jdbcType=VARCHAR},
			             singerName=#{singerName,jdbcType=VARCHAR},
			             lyric=#{lyric,jdbcType=VARCHAR},
			             songPath=#{songPath,jdbcType=VARCHAR},
			             albumName=#{albumName,jdbcType=VARCHAR},
			             country=#{country,jdbcType=VARCHAR},
			             schools=#{schools,jdbcType=VARCHAR},
			              year=#{year,jdbcType=VARCHAR},
			             isPopular=#{isPopular,jdbcType=VARCHAR}
                   WHERE id = #{id,jdbcType=INTEGER}
   </update>
   
   <delete id="deleteById" parameterType="java.lang.Integer">
    DELETE FROM Song WHERE id = #{id,jdbcType=INTEGER}
  </delete>
    
</mapper>