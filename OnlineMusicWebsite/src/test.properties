测试eclipse项目和本地git仓库项目是否同步
成功
git add 文件夹或文件名  从工作区提交代码到缓存区
git commit -m "注释" 从缓存区提交代码到分支
git push 本地仓库上传代码到gitHub仓库
git pull 从gitHub仓库下拉代码到本地仓库
add commit push pull 这样的顺序提交代码    
git checkout --orphan 分支名 创建本地仓库分支
git checkout 分支名  切换到该分支
git push origin 分支名 远程仓库中也就创建了一个对应分支或者提交代码到该分支
git branch -D 分支名  删除本地仓库分支
git push origin --delete 分支名   删除远程仓库的分支
git log   查看提交历史和版本号
git reset --hard 版本号   切换项目到那个版本  前提是本地仓库没有提交到远程仓库，否则不可以改变远程仓库
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
git rm 文件名  从工作区删除文件
git remote add origin 远程仓库地址   连接远程仓库
git push -u origin master  第一次推送master分支的所有内容；
git push origin 分支名  上交代码到远程仓库的指定分支


从远程仓库克隆为本地仓库  
（1）在需要克隆的位置运行git bash 命令
（2）输入git clone 远程仓库地址   即可在需要的位置看到该仓库
（3）然后就可以操作该仓库，修改和提交到远程仓库
新建一个分支完成特殊的任务
git checkout -b 分支名
在该分支上完成任务然后commit该任务
该分支的任务完成后，回到原来的分支，把两个分支合并
git merge 分支名 
然后把不需要的分支删掉（此分支只为这次任务而开，任务完成后，就没要在了）
